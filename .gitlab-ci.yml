stages:
  - build
  - tarball
  - release

variables:
  TARBALL_PATH_PREFIX: ${CI_PROJECT_NAME}-${CI_COMMIT_TAG}
  TARBALL_NAME: ${TARBALL_PATH_PREFIX}.tar.xz

include:
  - component: gitlab.gnome.org/GNOME/citemplates/release-service@master
    inputs:
      job-stage: release
      dist-job-name: "tarball"
      tarball-artifact-path: "${TARBALL_NAME}"

fedora:
  image: registry.gitlab.gnome.org/gnome/evolution/fedora:v1
  stage: build
  script:
    - export BASE_BRANCH=master
    - export SOURCE=$PWD
    - export PREFIX=$HOME/_prefix
    - export DEPS=$PWD/_deps
    - mkdir $PREFIX
    - mkdir $DEPS
    - pushd po/ >/dev/null && export TXT=`intltool-update -m 2>&1` && popd >/dev/null
    - if [ ! -z "$TXT" ]; then echo -e "\\033[1;31m" 1>&2; echo "$TXT" 1>&2; echo -e "\\033[0m" 1>&2; exit 1; fi
    - export LD_LIBRARY_PATH="$PREFIX/lib:$PREFIX/lib64"
    - export PKG_CONFIG_PATH="$PREFIX/lib/pkgconfig:$PREFIX/lib64/pkgconfig:$PREFIX/share/pkgconfig"
    - export GSETTINGS_SCHEMA_DIR="$PREFIX/share/glib-2.0/schemas"
    - cd $DEPS
    - git clone --depth=1 --branch $BASE_BRANCH https://gitlab.gnome.org/GNOME/evolution-data-server.git
    - git clone --depth=1 --branch $BASE_BRANCH https://gitlab.gnome.org/GNOME/evolution.git
    - cd $DEPS/evolution-data-server
    - mkdir _build && cd _build
    - cmake -G "Ninja" \
            -DCMAKE_BUILD_TYPE=Release
            -DCMAKE_INSTALL_PREFIX=$PREFIX
            -DENABLE_GOA=ON
            -DENABLE_EXAMPLES=OFF
            -DENABLE_TESTS=OFF
            -DENABLE_INTROSPECTION=OFF
            -DENABLE_VALA_BINDINGS=OFF
            -DENABLE_INSTALLED_TESTS=OFF
            -DENABLE_GTK_DOC=OFF
            -DWITH_PRIVATE_DOCS=OFF
            -DWITH_LIBDB=OFF
            -DWITH_PHONENUMBER=OFF
            ..
    - ninja
    - ninja install
    - cd $DEPS/evolution
    - mkdir _build && cd _build
    - cmake -G "Ninja" \
            -DCMAKE_BUILD_TYPE=Release
            -DCMAKE_INSTALL_PREFIX=$PREFIX
            -DENABLE_GTK_DOC=OFF
            -DENABLE_CONTACT_MAPS=OFF
            -DENABLE_INSTALLED_TESTS=OFF
            -DWITH_HELP=OFF
            ..
    - ninja
    - ninja install
    - cd $SOURCE
    - mkdir _build && cd _build
    - cmake -G "Ninja" \
            -DCMAKE_BUILD_TYPE=Release
            -DCMAKE_INSTALL_PREFIX=$PREFIX
            ..
    - ninja
    - ninja install
    - cp $DEPS/evolution-data-server/_build/evolution-data-server-config.h $DEPS/
    - cp $DEPS/evolution/_build/evolution-config.h $DEPS
  artifacts:
    name: "${CI_PROJECT_NAME}-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}"
    when: always
    paths:
      - "_build/evolution-ews-config.h"
      - "_deps/evolution-data-server-config.h"
      - "_deps/evolution-config.h"

flatpak:
  image: "quay.io/gnome_infrastructure/gnome-runtime-images:gnome-master"
  stage: build
  tags:
    - flatpak
  variables:
    BUNDLE: "evolution-ews-nightly.flatpak"
    MANIFEST_PATH: "data/org.gnome.EvolutionEws.Devel.json"
    FLATPAK_MODULE: "evolution-ews"
    APP_ID: "org.gnome.EvolutionEws.Devel"
    RUNTIME_REPO: "https://nightly.gnome.org/gnome-nightly.flatpakrepo"
  when: manual
  before_script:
    - export PATH="/usr/lib/ccache:$PATH"
    - export CCACHE_BASEDIR="$PWD"
    - export CCACHE_DIR="$PWD/ccache"
  script:
    - jq -M '(.modules[] | select(.name=="evolution-ews")).sources[0].url = env.CI_REPOSITORY_URL' ${MANIFEST_PATH} > tmp.json && mv tmp.json ${MANIFEST_PATH}
    - jq -M 'del((.modules[] | select(.name=="evolution-ews")).sources[0].branch)' ${MANIFEST_PATH} > tmp.json && mv tmp.json ${MANIFEST_PATH}
    - jq -M '(.modules[] | select(.name=="evolution-ews")).sources[0].commit = env.CI_COMMIT_SHA' ${MANIFEST_PATH} > tmp.json && mv tmp.json ${MANIFEST_PATH}

    - flatpak-builder --keep-build-dirs --user --disable-rofiles-fuse flatpak_app --repo=repo --ccache ${BRANCH:+--default-branch=$BRANCH} ${MANIFEST_PATH}
    - flatpak build-bundle repo ${BUNDLE} --runtime-repo=${RUNTIME_REPO} ${APP_ID} ${BRANCH}
  cache:
    paths:
      - ccache
      - .flatpak-builder
  artifacts:
    name: "Flatpak artifacts"
    expose_as: "Get Flatpak bundle here"
    when: "always"
    paths:
      - "${BUNDLE}"
      - ".flatpak-builder/build/${FLATPAK_MODULE}/evolution-ews-config.h"
      - ".flatpak-builder/build/${FLATPAK_MODULE}/CMakeFiles/CMakeError.log"
      - ".flatpak-builder/build/${FLATPAK_MODULE}/CMakeFiles/CMakeOutput.log"
    expire_in: 14 days

tarball:
  stage: tarball
  image: "quay.io/gnome_infrastructure/gnome-runtime-images:gnome-master"
  dependencies:
    - fedora
  allow_failure: false
  script:
    - git config --global --add safe.directory `pwd`
    - git archive --prefix=${TARBALL_PATH_PREFIX}/ HEAD | xz -z > ${TARBALL_NAME}
  artifacts:
    name: "${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}"
    expire_in: 14 days
    paths:
      - "${TARBALL_NAME}"
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED
